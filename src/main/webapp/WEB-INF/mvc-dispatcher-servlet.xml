<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- находится конфиг дистатчера сервлета нашего приложения -->
    <context:component-scan base-package="com.luxoftmarket.controller"/>

    <!-- To prevent browser's back button on dispalying secured resource after logout -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="cacheSeconds" value="0" />
    </bean>

    <mvc:annotation-driven />
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Для использования сокращенных имен в Controller, т.е. страницы, которые находятся в "/WEB-INF/pages/" с суффиксом ".jsp" могут прописываться в контроллере без префикса и без суффикса -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled"
                                     secured-annotations="enabled"/>

    <security:http use-expressions="true">
        <!--<security:session-management invalid-session-url="/Login" >-->
        <security:session-management invalid-session-url="/" >
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"  />
        </security:session-management>

        <!--все доступно всем-->
        <!-- this means all URL in this app will be checked fi user is authenticated -->
        <!--<security:intercept-url pattern="/**" access="permitAll"/>-->

        <security:form-login/> <!-- We will just use the built use the built-in form login page in Spring -->

        <!-- this means all URL we will use in JSP -->
        <!-- <logout logout-url="/logout" logout-success-url="/index"/> -->

        <security:logout logout-success-url="/" delete-cookies="JSESSIONID"/>
        <security:remember-me/>
    </security:http>

    <!-- нужен для шифрования пароля -->
    <!--<bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>-->



    <!--<security:authentication-manager>-->
        <!--<security:authentication-provider>-->
            <!--&lt;!&ndash; Normally, in this part, you will declare the source of your users-->
                 <!--But for simplicity (простота), we will hard-core the users. This is very useful (полезно) while testing setup (установить) &ndash;&gt;-->

            <!--&lt;!&ndash; использует encoder объявленый выше, для шифрования пароля &ndash;&gt;-->
            <!--<security:password-encoder ref="encoder"/>-->

            <!--<security:user-service>-->
                <!--&lt;!&ndash; password "koala" for both &ndash;&gt;-->
                <!--<security:user name="user"-->
                               <!--password="4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde"-->
                               <!--authorities="user"/>-->
                <!--<security:user name="admin"-->
                               <!--password="4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde"-->
                               <!--authorities="admin, user"/>-->
            <!--</security:user-service>-->
             <!--&lt;!&ndash;<jdbc user service data source ref "dataSource"&ndash;&gt;-->
             <!--&lt;!&ndash;users by username query "select username password enabled where username =""&ndash;&gt;-->
             <!--&lt;!&ndash;autorities by username query "select u.username, au.authority&ndash;&gt;-->
             <!--&lt;!&ndash;from users u, authorities au&ndash;&gt;-->
             <!--&lt;!&ndash;where u.id = au.user_id and u.username ="" />&ndash;&gt;-->
        <!--</security:authentication-provider>-->
    <!--</security:authentication-manager>-->


    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
       <property name="userDetailsService" ref="userDetailsService"></property>
    </bean>

    <bean id="authenticationManager"
          class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder hash="md5"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>